99条Unity 小技巧

一：什么是协同程序？ 
    在主线程运行的同时开启另一段逻辑处理，来协助当前程序的执行，
    协程很像多线程，但是不是多线程，Unity的协程实在每帧结束之后去检测yield的条件是否满足。

二：Unity3d中的碰撞器和触发器的区别？ 
    碰撞器是触发器的载体，而触发器只是碰撞器身上的一个属性。
    当Is Trigger=false时，碰撞器根据物理引擎引发碰撞，产生碰撞的效果，可以调用OnCollisionEnter/Stay/Exit函数；
    当Is Trigger=true时，碰撞器被物理引擎所忽略，没有碰撞效果，可以调用OnTriggerEnter/Stay/Exit函数。
    如果既要检测到物体的接触又不想让碰撞检测影响物体移动或要检测一个物件是否经过空间中的某个区域这时就可以用到触发器

三：物体发生碰撞的必要条件？ 
    两个物体都必须带有碰撞器（Collider），其中一个物体还必须带有Rigidbody刚体，
    而且必须是运动的物体带有Rigidbody脚本才能检测到碰撞

四：请简述ArrayList和List的主要区别？ 
    ArrayList存在不安全类型（ArrayList会把所有插入其中的数据都当做Object来处理），装箱拆箱的操作（费时），
    List是泛型类，功能跟ArrayList相似，但不存在ArrayList所说的问题。 

五：如何安全的在不同工程间安全地迁移asset数据？三种方法 
    1.将Assets目录和Library目录一起迁移 
    2.导出包，export Package 
    3.用unity自带的assets Server功能

六：OnEnable、Awake、Start运行时的发生顺序？哪些可能在同一个对象周期中反复的发生 
    Awake –>OnEnable->Start，OnEnable在同一周期中可以反复地发生。

七：MeshRender中material和sharedmaterial的区别？ 
    修改sharedMaterial将改变所有物体使用这个材质的外观，并且也改变储存在工程里的材质设置。
    不推荐修改由sharedMaterial返回的材质。如果你想修改渲染器的材质，使用material替代。

八：Unity提供了几种光源，分别是什么 
    四种。 
    平行光：Directional Light 
    点光源：Point Light 
    聚光灯：Spot Light 
    区域光源：Area Light

九：简述一下对象池，你觉得在FPS里哪些东西适合使用对象池 
    对象池就存放需要被反复调用资源的一个空间，当一个对象回大量生成的时候如果每次都销毁创建会很费时间，
    通过对象池把暂时不用的对象放到一个池中（也就是一个集合），当下次要重新生成这个对象的时候先去池中查找一下是否有可用的对象，
    如果有的话就直接拿出来使用，不需要再创建，如果池中没有可用的对象，才需要重新创建，利用空间换时间来达到游戏的高速运行效果，
    在FPS游戏中要常被大量复制的对象包括子弹，敌人，粒子等

三、动态加载资源的方式，以及区别。 
　　　　答： 
　　　　  1.通过Resources.Load（）模块：调用它的load函数，可以直接load并返回某个类型的Object，
            前提是需要把这个资源放在Resource命名的文件夹下，Unity不管有没有场景引用，都会将其全部打包到安装包中。
　　　　  2.通过bundle的形式：即将资源打包成 asset bundle 放在服务器或本地磁盘，
            然后使用www模块get下来，之后从这个bundle中load某个Object。
　　　　  3.通过AssetDatabase.loadasset：这种方式只在editor范围内有效，
            游戏运行时没有这个函数，他通常是在开发中调用。
　　　　  区别： 
　　　　　　Resoueces的方式需要把所有资源全部打入安装包，这对游戏的发布和版本升级（patch）是不利的，
            所以Unity不太推荐使用它，而都用bundle的方式代替，把资源打成几个小的bundle，用哪个就load哪个，
            这样有利于分包发布和版本升级。但是在开发过程中，不可能每更新一个资源就打一次bundle，
            所以在editor环境下可以使用AssetDatabase来模拟，这通常需要我们封装一个dynamic resource的loader模块，在不同的环境下做不同的实现。

十四、简述prefab的用处。 
　　　　答：在游戏运行时实例化，prefab相当于一个模版，对已经有的素材、脚本、参数做一个默认的配置，
        以便于以后的修改，同时prefab打包的内容简化了导出的操作，便于团队的交流。

二十三、Unity3d脚本从唤醒到销毁有着一套比较完整的生命周期，请列出系统自带的几个重要的方法。 
　　　　答：Awake ---> OnEnable ---> Start ---> FixedUpdate ---> Update ---> 
        LateUpdate ---> OnGUI ---> OnDisable ---> OnDestroy


二十八、请描述什么是LOD，它的优缺点分别是什么？ 
　　　　答：LOD（Level of detail）多层次细节，是最常用的游戏优化技术。 
　　　　　　优点：它按照模型的位置和重要程度决定其渲染的资源分配，降低物体的面数和细节度，从而获得高效率的渲染运算。 
　　　　　　缺点：增加了内存。
二十九、MipMap是什么？它的作用是什么？ 
　　　　答：MipMap是常用的游戏优化技术，贴图会根据与摄像机的距离，选择不同精度的贴图。 
　　　　　　作用：为了加快渲染进度和减少图像锯齿，贴图被处理成一系列被预先计算和优化过的图片组成的文件。
            其技术特点优点类似于LOD技术，但是不用的是，LOD是针对模型资源，而MipMap是针对的纹理贴图资源。
　　　　　　优点：优化显存宽带，用以减少渲染。 
　　　　　　缺点：增加了内存。


