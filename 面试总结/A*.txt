A* 
    结合了贪心算法和优先算法 
    个人感觉类似最佳优先算法，都是维护一个优先队列或堆，将结点按照某个值优先的情况放进去，不同的是这次需要一个估计函数h(n) 
    算法思想：对于优先队列，每取出一个结点n，将他的所有儿子结点n'放入优先队列，优先级由函数f(n)计算出 
    g(n)：起点到结点n的代价 
    h(n)：结点n到终点的估计代价 
    f(n)=g(n)+h(n) 
    A*算法是一种启发式算法 
    设h*(n)为结点n到目标结点的实际最小代价 
    只要h(n)<=h*(n)，那么代价就不会被高估，这个算法就可以找出最优解 
    A*算法使用最佳优先策略，用来解决优化问题 
    步骤： 
        1.把起点放入优先队列 
        2.重复如下过程： 
        取出优先级最高的结点n，即f(n)最小的结点，作为当前要处理的结点 将这个结点放入一个close表中，
        这个表储存父结点子结点等信息 对于此结点可达的结点n'： 
        ①若这个结点不在队列中，计算g(n'),h(n'),f(n')，将其加入队列，并将n设为n'的父亲 
        ②若n'在队列中，计算由n到n'的g(n')值，更小的g(n')意味着这是更好的路径，如果g(n')更小，则将n设为n'的父亲，并重新计算g(n')和f(n') 停止，
            当： ①终点被找到 ②队列为空，此时查找失败 3.保存路径，从终点开始，沿着父结点移动至起点，即为路径

